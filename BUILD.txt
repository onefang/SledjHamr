You will need the Enlightenment Foundation Libraries (EFL) and
Elementary installed before you can build this.  Since I started
experimenting with the new Evas_3D stuff, that means you will need the
1.10 versions, which have not been released yet.  Beta tarballs can be
found here -

http://download.enlightenment.org/rel/libs/efl/efl-1.10.0-beta1.tar.bz2

http://download.enlightenment.org/rel/libs/elementary/elementary-1.10.0-beta1.tar.bz2

Or you can use git HEAD -

git clone git://git.enlightenment.org/core/efl.git

git clone git://git.enlightenment.org/core/elementary.git

It should all work under X window managers other than Enlightenment,
though this has not been tested.  The same applies to Linux distros
other than Ubuntu 12.04, that's the only one that hes been tested by me. 
This is all still experimental, but I intend to get it to work under Mac
OS X and Windows as well.

The left side of http://enlightenment.org/p.php?p=download&l=en explains
the build order and requirements. Evas generic loaders will probably be
needed, Emotion generic players likely wont be needed (yet), except as a
requirement of Elementary.  Enlightenment and other apps are not
needed.

http://download.enlightenment.org/rel/libs/evas_generic_loaders/evas_generic_loaders-1.10.0-beta1.tar.bz2

http://download.enlightenment.org/rel/libs/emotion_generic_players/emotion_generic_players-1.10.0-beta1.tar.bz2

git clone git://git.enlightenment.org/core/evas_generic_loaders.git

git clone git://git.enlightenment.org/core/emotion_generic_players.git

Once you have spent hours struggling with getting EFL and Elementary
complied and installed, simply run build.lua from the top level
directory here to build all of this SledjHamr stuff.  There's no
installing going on here, it's still to early in experimental
development, plus nothing does anything useful yet.

In src/extantz/extantz.h, at the top, are a bunch of #defines you can
turn on and off.  Try them out.

Running test.sh from the top level will build it all, then run it all. 
You should see a lot of logging style output and two windows.  Most of
the logging style output is from the LSL script runner as it compiles
then runs a copy of the MLP scripts.  The two windows are a small one
with two buttons in it, and a bigger one with 3D stuff in it.  The big
3D window has it's own internal windows, including that small one again. 
The rest of the non logging style output is just testing things, which
will include some ERROR messages, which is just testing several error
conditions, so don't be alarmed.  You will see this non logging style
output twice, since it comes from the little window, which is invoked
twice, as a stand alone window, and as on internal window of the big 3D
application.

You really can't do anything useful with all of this yet.  Yes, I know
the Irrlicht stuff flickers like crazy.

Have lots of fun.
